plugins {
    id 'java'
    id 'idea'
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id 'jacoco'
    id 'application'
}

mainClassName = "com.github.wakingrufus.website.MainKt"
repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://dl.bintray.com/kotlin/kotlin-js-wrappers"
    }
}

version = "0.3.0"
group = "com.github.wakingrufus"

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'io.github.microutils:kotlin-logging:1.6.10'
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.jsoup:jsoup:1.10.3"
    compile 'org.jetbrains.kotlinx:kotlinx-html-jvm:0.6.12'
    compile 'com.github.kittinunf.fuel:fuel:1.12.1'
    compile 'org.slf4j:slf4j-log4j12:1.7.25'
    compile 'org.jetbrains:kotlin-css:1.0.0-pre.58-kotlin-1.3.0'
    compile 'org.jetbrains:kotlin-css-jvm:1.0.0-pre.58-kotlin-1.3.0'
    compile 'com.rometools:rome:1.10.0'
    
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.3.1")
    testImplementation("com.willowtreeapps.assertk:assertk-jvm:0.12")
    
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.3.1")
}

idea {
    project {
        languageLevel = '1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

jacocoTestReport.dependsOn test
build.dependsOn jacocoTestReport

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ['-XXLanguage:+InlineClasses']
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

test {
    useJUnitPlatform()
}

run {
    if (project.hasProperty('neocities.apiKey')) {
        args = [getProperty("neocities.apiKey")]
    } else if (project.hasProperty('neocities.user')) {
        args = [getProperty("neocities.user"), getProperty("neocities.password")]
    }
}